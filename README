TTYtter intro tackon:

This is Term::ReadLine::TTYtter. It is a modified version of T::RL::Perl with
several new nonstandard features specific to TTYtter, but may be useful for
other applications.

It also allows UTF-8 characters to be entered without crashing, and adds a
counter so you can see how many characters you've entered (which is a big
deal for Twitter and other microblogging platforms).

These methods are additionally defined, which are non-standard:

	removereadline method: erases the current prompt from the screen
	redisplay method: repaints the current prompt on the screen
	hook_background_control method: connects the interactive readline
		prompt to a PID specified by $main::child. The PID is then
		sent signal SIGUSR1 when a character is beginning processing
		(i.e., the process needs to NOT write to the screen), and
		SIGUSR2 when done (i.e., the process can write again).
        hook_use_ansi: same, but connects to $main::ansi (1 = use ANSI,
                0 = don't). thus, unlike T:RL:Perl, T:RL:TTYtter defaults to
                ANSI *off*.
        hook_no_counter: same, but connects to $main::dont_use_counter (1 =
                disable counter). Useful for prompts where this is
                irrelevant.
	hook_no_tco: this is Twitter specific. See code.

(The use of hooks into $main:: was so that the calling convention of
&readline would not have to be disturbed to pass additional options.)

Like T::RL::Perl, this is free software offered under the Perl Artistic
License (see below). Because of dueling licenses, it must be distributed
separately from TTYtter (which is Floodgap Free Software License), and it
can be used 100% separately from TTYtter as an entirely independent driver.

Changes for T::RL::TTYtter (C)2012 Cameron Kaiser and Contributors. All
rights reserved. Send me your comments at ckaiser@floodgap.com

LEGALESE
~~~~~~~~
     Copyright (c) 1995 Ilya Zakharevich. All rights reserved.
     This program is free software; you can redistribute it and/or
     modify it under the same terms as Perl itself.

	You should have received a copy of the Perl license along with
	Perl; see the file README in Perl distribution.
 
	You should have received a copy of the GNU General Public License
	along with Perl; see the file Copying.  If not, write to
	the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.

	You should have received a copy of the Artistic License
	along with Perl; see the file Artistic.


Author of this software makes no claim whatsoever about suitability,
reliability, edability, editability or usability of this product, and
should not be kept liable for any damage resulting from the use of
it. If you can use it, you are in luck, if not, I should not be kept
responsible. Keep a handy copy of your backup tape at hand.

WHAT
~~~~

This is a quick implementation of the minimal interface to Readline
libraries. The implementation is made in Perl (mostly) by Jeffrey
Friedl. The only thing this library does is to make it conformant (and
add some minimal changes, like using Term::ReadKey if present, and
correct work under xterm). 

(In fact this is an understatement now, a lot of additions are made,
see CHANGES...)

INSTALL
~~~~~~~

To install this module type

	perl Makefile.PL
	make
	make test
		or (with newer makemaker)
	make test_dynamic
		(Check whether you are satisfied with the results. Try
		to redirect stdin and/or stdout.)
	make install

You may need to install Term::ReadKey first if your system is new (Solaris
is ;-(). (Available in standard places, checked with 1.98.)

If you see something like

Can't ioctl TIOCGETP: Invalid argument at ...

this means you need ReadKey.

Note that as of 0.95 Term/ReadLine.pm is unbundled to make CPAN.pm happier.
On the other hand, if you get newer Term/ReadLine.pm (say, by installing
newer Perl) you may get more features enabled.

For most features of T::R::P one needs to look in the CHANGES file, and the
comments at the start of of readline/readline.pm.  Volunteers to make the
corresponding OO interface into POD are welcome (wrappers are available in
Term::ReadLine::Perl; see perl5db.pl for a sample usage of hairier features,
such as accessing Readline variables and methods).

AUTHOR BUGS
~~~~~~~~~~~
Ilya Zakharevich
cpan@ilyaz.org

Std dstribution site: http://www.ilyaz.org/software/perl/modules
